/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cryptocurrencyvaluepredictor;

import java.time.LocalDateTime;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import utilities.PriceCollector;
import model.Currency;

/**
 *
 * @author jkell
 */
public class CryptocurrencyValuePredictor extends javax.swing.JFrame {
    PriceCollector pc = new PriceCollector();
    ScheduledExecutorService exec = Executors.newScheduledThreadPool(1);
    
    /**
     * Creates new form CryptocurrencyValuePredictor
     */
    public CryptocurrencyValuePredictor() {
        initComponents();
        CollectionSynchroniser();

        Runnable automatedCollection = new Runnable() {
            public void run() {
                PriceCollection();
            }
        };

        exec.scheduleAtFixedRate(automatedCollection, (60 - LocalDateTime.now().getSecond()), 60, TimeUnit.SECONDS);
    }

    private void CollectionSynchroniser() {
        Currency[] currencies = pc.Get();
        System.out.println(currencies[0].getId() + " " + currencies[0].getName() + " " + currencies[0].getValue());
        System.out.println(currencies[1].getId() + " " + currencies[1].getName() + " " + currencies[1].getValue());
        System.out.println(currencies[2].getId() + " " + currencies[2].getName() + " " + currencies[2].getValue());
        System.out.println(currencies[3].getId() + " " + currencies[3].getName() + " " + currencies[3].getValue());
        
        /*
        
        POST TO API
        
        */
    }
    
    private void PriceCollection() {
        Currency[] currencies = pc.Get();
        System.out.println(currencies[0].getId() + " " + currencies[0].getName() + " " + currencies[0].getValue());
        System.out.println(currencies[1].getId() + " " + currencies[1].getName() + " " + currencies[1].getValue());
        System.out.println(currencies[2].getId() + " " + currencies[2].getName() + " " + currencies[2].getValue());
        System.out.println(currencies[3].getId() + " " + currencies[3].getName() + " " + currencies[3].getValue());
        
        /*
        
        POST TO API
        
        */
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CryptocurrencyValuePredictor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CryptocurrencyValuePredictor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CryptocurrencyValuePredictor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CryptocurrencyValuePredictor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CryptocurrencyValuePredictor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
